/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: cfsnet.proto */

#ifndef PROTOBUF_C_cfsnet_2eproto__INCLUDED
#define PROTOBUF_C_cfsnet_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Ara__Cfsnet__AccessFile Ara__Cfsnet__AccessFile;
typedef struct _Ara__Cfsnet__Boolean Ara__Cfsnet__Boolean;
typedef struct _Ara__Cfsnet__Buffer Ara__Cfsnet__Buffer;
typedef struct _Ara__Cfsnet__Close Ara__Cfsnet__Close;
typedef struct _Ara__Cfsnet__DownloadDirectory Ara__Cfsnet__DownloadDirectory;
typedef struct _Ara__Cfsnet__DownloadFile Ara__Cfsnet__DownloadFile;
typedef struct _Ara__Cfsnet__Drive Ara__Cfsnet__Drive;
typedef struct _Ara__Cfsnet__Handshake Ara__Cfsnet__Handshake;
typedef struct _Ara__Cfsnet__KeyPair Ara__Cfsnet__KeyPair;
typedef struct _Ara__Cfsnet__List Ara__Cfsnet__List;
typedef struct _Ara__Cfsnet__ListDirectory Ara__Cfsnet__ListDirectory;
typedef struct _Ara__Cfsnet__MakeDirectory Ara__Cfsnet__MakeDirectory;
typedef struct _Ara__Cfsnet__MakeDirectoryPath Ara__Cfsnet__MakeDirectoryPath;
typedef struct _Ara__Cfsnet__Number Ara__Cfsnet__Number;
typedef struct _Ara__Cfsnet__Open Ara__Cfsnet__Open;
typedef struct _Ara__Cfsnet__Read Ara__Cfsnet__Read;
typedef struct _Ara__Cfsnet__ReadFile Ara__Cfsnet__ReadFile;
typedef struct _Ara__Cfsnet__RemoveDirectory Ara__Cfsnet__RemoveDirectory;
typedef struct _Ara__Cfsnet__RemoveDirectoryPath Ara__Cfsnet__RemoveDirectoryPath;
typedef struct _Ara__Cfsnet__Request Ara__Cfsnet__Request;
typedef struct _Ara__Cfsnet__Resolve Ara__Cfsnet__Resolve;
typedef struct _Ara__Cfsnet__Response Ara__Cfsnet__Response;
typedef struct _Ara__Cfsnet__Stat Ara__Cfsnet__Stat;
typedef struct _Ara__Cfsnet__StatFile Ara__Cfsnet__StatFile;
typedef struct _Ara__Cfsnet__String Ara__Cfsnet__String;
typedef struct _Ara__Cfsnet__TouchFile Ara__Cfsnet__TouchFile;
typedef struct _Ara__Cfsnet__UnlinkFile Ara__Cfsnet__UnlinkFile;
typedef struct _Ara__Cfsnet__WriteFile Ara__Cfsnet__WriteFile;


/* --- enums --- */

typedef enum _Ara__Cfsnet__FileMode {
  ARA__CFSNET__FILE_MODE__F_OK = 0,
  ARA__CFSNET__FILE_MODE__X_OK = 1,
  ARA__CFSNET__FILE_MODE__W_OK = 2,
  ARA__CFSNET__FILE_MODE__R_OK = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(ARA__CFSNET__FILE_MODE)
} Ara__Cfsnet__FileMode;
typedef enum _Ara__Cfsnet__ErrorCode {
  ARA__CFSNET__ERROR_CODE__NoError = 0,
  ARA__CFSNET__ERROR_CODE__BadRequestError = 400,
  ARA__CFSNET__ERROR_CODE__AccessDeniedError = 403,
  ARA__CFSNET__ERROR_CODE__NotFoundError = 404,
  ARA__CFSNET__ERROR_CODE__NotSupportedError = 405,
  ARA__CFSNET__ERROR_CODE__NotOpenedError = 410,
  ARA__CFSNET__ERROR_CODE__InternalError = 500,
  ARA__CFSNET__ERROR_CODE__NotImplementedError = 501
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(ARA__CFSNET__ERROR_CODE)
} Ara__Cfsnet__ErrorCode;
typedef enum _Ara__Cfsnet__Operation {
  ARA__CFSNET__OPERATION__NoOperation = 0,
  ARA__CFSNET__OPERATION__ResolveOperation = 1,
  ARA__CFSNET__OPERATION__KeyPairOperation = 2,
  ARA__CFSNET__OPERATION__OpenOperation = 10,
  ARA__CFSNET__OPERATION__CloseOperation = 11,
  ARA__CFSNET__OPERATION__ReadOperation = 12,
  ARA__CFSNET__OPERATION__WriteOperation = 13,
  ARA__CFSNET__OPERATION__ReadFileOperation = 20,
  ARA__CFSNET__OPERATION__WriteFileOperation = 21,
  ARA__CFSNET__OPERATION__StatFileOperation = 22,
  ARA__CFSNET__OPERATION__UnlinkFileOperation = 23,
  ARA__CFSNET__OPERATION__AccessFileOperation = 24,
  ARA__CFSNET__OPERATION__TouchFileOperation = 25,
  ARA__CFSNET__OPERATION__DownloadFileOperation = 26,
  ARA__CFSNET__OPERATION__DownloadDirectoryOperation = 30,
  ARA__CFSNET__OPERATION__MakeDirectoryOperation = 31,
  ARA__CFSNET__OPERATION__MakeDirectoryPathOperation = 32,
  ARA__CFSNET__OPERATION__RemoveDirectoryOperation = 33,
  ARA__CFSNET__OPERATION__RemoveDirectoryPathOperation = 34,
  ARA__CFSNET__OPERATION__ListDirectoryOperation = 35
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(ARA__CFSNET__OPERATION)
} Ara__Cfsnet__Operation;

/* --- messages --- */

struct  _Ara__Cfsnet__AccessFile
{
  ProtobufCMessage base;
  char *path;
  Ara__Cfsnet__FileMode mode;
};
#define ARA__CFSNET__ACCESS_FILE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ara__cfsnet__access_file__descriptor) \
    , (char *)protobuf_c_empty_string, ARA__CFSNET__FILE_MODE__F_OK }


struct  _Ara__Cfsnet__Boolean
{
  ProtobufCMessage base;
  protobuf_c_boolean value;
};
#define ARA__CFSNET__BOOLEAN__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ara__cfsnet__boolean__descriptor) \
    , 0 }


struct  _Ara__Cfsnet__Buffer
{
  ProtobufCMessage base;
  ProtobufCBinaryData value;
  uint64_t length;
};
#define ARA__CFSNET__BUFFER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ara__cfsnet__buffer__descriptor) \
    , {0,NULL}, 0 }


struct  _Ara__Cfsnet__Close
{
  ProtobufCMessage base;
  uint32_t filedescriptor;
};
#define ARA__CFSNET__CLOSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ara__cfsnet__close__descriptor) \
    , 0 }


struct  _Ara__Cfsnet__DownloadDirectory
{
  ProtobufCMessage base;
  char *path;
};
#define ARA__CFSNET__DOWNLOAD_DIRECTORY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ara__cfsnet__download_directory__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  _Ara__Cfsnet__DownloadFile
{
  ProtobufCMessage base;
  char *path;
};
#define ARA__CFSNET__DOWNLOAD_FILE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ara__cfsnet__download_file__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  _Ara__Cfsnet__Drive
{
  ProtobufCMessage base;
  ProtobufCBinaryData id;
  ProtobufCBinaryData key;
  ProtobufCBinaryData secretkey;
};
#define ARA__CFSNET__DRIVE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ara__cfsnet__drive__descriptor) \
    , {0,NULL}, {0,NULL}, {0,NULL} }


struct  _Ara__Cfsnet__Handshake
{
  ProtobufCMessage base;
  ProtobufCBinaryData nonce;
  ProtobufCBinaryData key;
  protobuf_c_boolean ack;
};
#define ARA__CFSNET__HANDSHAKE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ara__cfsnet__handshake__descriptor) \
    , {0,NULL}, {0,NULL}, 0 }


struct  _Ara__Cfsnet__KeyPair
{
  ProtobufCMessage base;
  ProtobufCBinaryData seed;
  ProtobufCBinaryData publickey;
  ProtobufCBinaryData secretkey;
};
#define ARA__CFSNET__KEY_PAIR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ara__cfsnet__key_pair__descriptor) \
    , {0,NULL}, {0,NULL}, {0,NULL} }


struct  _Ara__Cfsnet__List
{
  ProtobufCMessage base;
  size_t n_values;
  ProtobufCBinaryData *values;
  uint64_t length;
};
#define ARA__CFSNET__LIST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ara__cfsnet__list__descriptor) \
    , 0,NULL, 0 }


struct  _Ara__Cfsnet__ListDirectory
{
  ProtobufCMessage base;
  char *path;
};
#define ARA__CFSNET__LIST_DIRECTORY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ara__cfsnet__list_directory__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  _Ara__Cfsnet__MakeDirectory
{
  ProtobufCMessage base;
  char *path;
};
#define ARA__CFSNET__MAKE_DIRECTORY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ara__cfsnet__make_directory__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  _Ara__Cfsnet__MakeDirectoryPath
{
  ProtobufCMessage base;
  char *path;
};
#define ARA__CFSNET__MAKE_DIRECTORY_PATH__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ara__cfsnet__make_directory_path__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  _Ara__Cfsnet__Number
{
  ProtobufCMessage base;
  double value;
};
#define ARA__CFSNET__NUMBER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ara__cfsnet__number__descriptor) \
    , 0 }


struct  _Ara__Cfsnet__Open
{
  ProtobufCMessage base;
  char *path;
  char *flags;
};
#define ARA__CFSNET__OPEN__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ara__cfsnet__open__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


struct  _Ara__Cfsnet__Read
{
  ProtobufCMessage base;
  uint32_t filedescriptor;
  uint32_t start;
  uint32_t end;
};
#define ARA__CFSNET__READ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ara__cfsnet__read__descriptor) \
    , 0, 0, 0 }


struct  _Ara__Cfsnet__ReadFile
{
  ProtobufCMessage base;
  char *path;
  uint32_t start;
  uint32_t end;
};
#define ARA__CFSNET__READ_FILE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ara__cfsnet__read_file__descriptor) \
    , (char *)protobuf_c_empty_string, 0, 0 }


struct  _Ara__Cfsnet__RemoveDirectory
{
  ProtobufCMessage base;
  char *path;
};
#define ARA__CFSNET__REMOVE_DIRECTORY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ara__cfsnet__remove_directory__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  _Ara__Cfsnet__RemoveDirectoryPath
{
  ProtobufCMessage base;
  char *path;
};
#define ARA__CFSNET__REMOVE_DIRECTORY_PATH__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ara__cfsnet__remove_directory_path__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  _Ara__Cfsnet__Request
{
  ProtobufCMessage base;
  ProtobufCBinaryData nonce;
  Ara__Cfsnet__Drive *drive;
  Ara__Cfsnet__Operation operation;
  ProtobufCBinaryData buffer;
};
#define ARA__CFSNET__REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ara__cfsnet__request__descriptor) \
    , {0,NULL}, NULL, ARA__CFSNET__OPERATION__NoOperation, {0,NULL} }


struct  _Ara__Cfsnet__Resolve
{
  ProtobufCMessage base;
  char *path;
};
#define ARA__CFSNET__RESOLVE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ara__cfsnet__resolve__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  _Ara__Cfsnet__Response
{
  ProtobufCMessage base;
  ProtobufCBinaryData nonce;
  Ara__Cfsnet__Drive *drive;
  Ara__Cfsnet__Operation operation;
  Ara__Cfsnet__Request *request;
  Ara__Cfsnet__ErrorCode errorcode;
  ProtobufCBinaryData buffer;
};
#define ARA__CFSNET__RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ara__cfsnet__response__descriptor) \
    , {0,NULL}, NULL, ARA__CFSNET__OPERATION__NoOperation, NULL, ARA__CFSNET__ERROR_CODE__NoError, {0,NULL} }


struct  _Ara__Cfsnet__Stat
{
  ProtobufCMessage base;
  uint32_t uid;
  uint32_t gid;
  uint32_t mode;
  uint64_t size;
  uint64_t atime;
  uint64_t ctime;
  uint64_t mtime;
  uint64_t blocks;
};
#define ARA__CFSNET__STAT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ara__cfsnet__stat__descriptor) \
    , 0, 0, 0, 0, 0, 0, 0, 0 }


struct  _Ara__Cfsnet__StatFile
{
  ProtobufCMessage base;
  char *path;
};
#define ARA__CFSNET__STAT_FILE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ara__cfsnet__stat_file__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  _Ara__Cfsnet__String
{
  ProtobufCMessage base;
  char *value;
};
#define ARA__CFSNET__STRING__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ara__cfsnet__string__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  _Ara__Cfsnet__TouchFile
{
  ProtobufCMessage base;
  char *path;
};
#define ARA__CFSNET__TOUCH_FILE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ara__cfsnet__touch_file__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  _Ara__Cfsnet__UnlinkFile
{
  ProtobufCMessage base;
  char *path;
};
#define ARA__CFSNET__UNLINK_FILE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ara__cfsnet__unlink_file__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  _Ara__Cfsnet__WriteFile
{
  ProtobufCMessage base;
  char *path;
  ProtobufCBinaryData buffer;
  uint32_t start;
  uint32_t end;
};
#define ARA__CFSNET__WRITE_FILE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&ara__cfsnet__write_file__descriptor) \
    , (char *)protobuf_c_empty_string, {0,NULL}, 0, 0 }


/* Ara__Cfsnet__AccessFile methods */
void   ara__cfsnet__access_file__init
                     (Ara__Cfsnet__AccessFile         *message);
size_t ara__cfsnet__access_file__get_packed_size
                     (const Ara__Cfsnet__AccessFile   *message);
size_t ara__cfsnet__access_file__pack
                     (const Ara__Cfsnet__AccessFile   *message,
                      uint8_t             *out);
size_t ara__cfsnet__access_file__pack_to_buffer
                     (const Ara__Cfsnet__AccessFile   *message,
                      ProtobufCBuffer     *buffer);
Ara__Cfsnet__AccessFile *
       ara__cfsnet__access_file__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ara__cfsnet__access_file__free_unpacked
                     (Ara__Cfsnet__AccessFile *message,
                      ProtobufCAllocator *allocator);
/* Ara__Cfsnet__Boolean methods */
void   ara__cfsnet__boolean__init
                     (Ara__Cfsnet__Boolean         *message);
size_t ara__cfsnet__boolean__get_packed_size
                     (const Ara__Cfsnet__Boolean   *message);
size_t ara__cfsnet__boolean__pack
                     (const Ara__Cfsnet__Boolean   *message,
                      uint8_t             *out);
size_t ara__cfsnet__boolean__pack_to_buffer
                     (const Ara__Cfsnet__Boolean   *message,
                      ProtobufCBuffer     *buffer);
Ara__Cfsnet__Boolean *
       ara__cfsnet__boolean__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ara__cfsnet__boolean__free_unpacked
                     (Ara__Cfsnet__Boolean *message,
                      ProtobufCAllocator *allocator);
/* Ara__Cfsnet__Buffer methods */
void   ara__cfsnet__buffer__init
                     (Ara__Cfsnet__Buffer         *message);
size_t ara__cfsnet__buffer__get_packed_size
                     (const Ara__Cfsnet__Buffer   *message);
size_t ara__cfsnet__buffer__pack
                     (const Ara__Cfsnet__Buffer   *message,
                      uint8_t             *out);
size_t ara__cfsnet__buffer__pack_to_buffer
                     (const Ara__Cfsnet__Buffer   *message,
                      ProtobufCBuffer     *buffer);
Ara__Cfsnet__Buffer *
       ara__cfsnet__buffer__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ara__cfsnet__buffer__free_unpacked
                     (Ara__Cfsnet__Buffer *message,
                      ProtobufCAllocator *allocator);
/* Ara__Cfsnet__Close methods */
void   ara__cfsnet__close__init
                     (Ara__Cfsnet__Close         *message);
size_t ara__cfsnet__close__get_packed_size
                     (const Ara__Cfsnet__Close   *message);
size_t ara__cfsnet__close__pack
                     (const Ara__Cfsnet__Close   *message,
                      uint8_t             *out);
size_t ara__cfsnet__close__pack_to_buffer
                     (const Ara__Cfsnet__Close   *message,
                      ProtobufCBuffer     *buffer);
Ara__Cfsnet__Close *
       ara__cfsnet__close__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ara__cfsnet__close__free_unpacked
                     (Ara__Cfsnet__Close *message,
                      ProtobufCAllocator *allocator);
/* Ara__Cfsnet__DownloadDirectory methods */
void   ara__cfsnet__download_directory__init
                     (Ara__Cfsnet__DownloadDirectory         *message);
size_t ara__cfsnet__download_directory__get_packed_size
                     (const Ara__Cfsnet__DownloadDirectory   *message);
size_t ara__cfsnet__download_directory__pack
                     (const Ara__Cfsnet__DownloadDirectory   *message,
                      uint8_t             *out);
size_t ara__cfsnet__download_directory__pack_to_buffer
                     (const Ara__Cfsnet__DownloadDirectory   *message,
                      ProtobufCBuffer     *buffer);
Ara__Cfsnet__DownloadDirectory *
       ara__cfsnet__download_directory__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ara__cfsnet__download_directory__free_unpacked
                     (Ara__Cfsnet__DownloadDirectory *message,
                      ProtobufCAllocator *allocator);
/* Ara__Cfsnet__DownloadFile methods */
void   ara__cfsnet__download_file__init
                     (Ara__Cfsnet__DownloadFile         *message);
size_t ara__cfsnet__download_file__get_packed_size
                     (const Ara__Cfsnet__DownloadFile   *message);
size_t ara__cfsnet__download_file__pack
                     (const Ara__Cfsnet__DownloadFile   *message,
                      uint8_t             *out);
size_t ara__cfsnet__download_file__pack_to_buffer
                     (const Ara__Cfsnet__DownloadFile   *message,
                      ProtobufCBuffer     *buffer);
Ara__Cfsnet__DownloadFile *
       ara__cfsnet__download_file__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ara__cfsnet__download_file__free_unpacked
                     (Ara__Cfsnet__DownloadFile *message,
                      ProtobufCAllocator *allocator);
/* Ara__Cfsnet__Drive methods */
void   ara__cfsnet__drive__init
                     (Ara__Cfsnet__Drive         *message);
size_t ara__cfsnet__drive__get_packed_size
                     (const Ara__Cfsnet__Drive   *message);
size_t ara__cfsnet__drive__pack
                     (const Ara__Cfsnet__Drive   *message,
                      uint8_t             *out);
size_t ara__cfsnet__drive__pack_to_buffer
                     (const Ara__Cfsnet__Drive   *message,
                      ProtobufCBuffer     *buffer);
Ara__Cfsnet__Drive *
       ara__cfsnet__drive__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ara__cfsnet__drive__free_unpacked
                     (Ara__Cfsnet__Drive *message,
                      ProtobufCAllocator *allocator);
/* Ara__Cfsnet__Handshake methods */
void   ara__cfsnet__handshake__init
                     (Ara__Cfsnet__Handshake         *message);
size_t ara__cfsnet__handshake__get_packed_size
                     (const Ara__Cfsnet__Handshake   *message);
size_t ara__cfsnet__handshake__pack
                     (const Ara__Cfsnet__Handshake   *message,
                      uint8_t             *out);
size_t ara__cfsnet__handshake__pack_to_buffer
                     (const Ara__Cfsnet__Handshake   *message,
                      ProtobufCBuffer     *buffer);
Ara__Cfsnet__Handshake *
       ara__cfsnet__handshake__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ara__cfsnet__handshake__free_unpacked
                     (Ara__Cfsnet__Handshake *message,
                      ProtobufCAllocator *allocator);
/* Ara__Cfsnet__KeyPair methods */
void   ara__cfsnet__key_pair__init
                     (Ara__Cfsnet__KeyPair         *message);
size_t ara__cfsnet__key_pair__get_packed_size
                     (const Ara__Cfsnet__KeyPair   *message);
size_t ara__cfsnet__key_pair__pack
                     (const Ara__Cfsnet__KeyPair   *message,
                      uint8_t             *out);
size_t ara__cfsnet__key_pair__pack_to_buffer
                     (const Ara__Cfsnet__KeyPair   *message,
                      ProtobufCBuffer     *buffer);
Ara__Cfsnet__KeyPair *
       ara__cfsnet__key_pair__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ara__cfsnet__key_pair__free_unpacked
                     (Ara__Cfsnet__KeyPair *message,
                      ProtobufCAllocator *allocator);
/* Ara__Cfsnet__List methods */
void   ara__cfsnet__list__init
                     (Ara__Cfsnet__List         *message);
size_t ara__cfsnet__list__get_packed_size
                     (const Ara__Cfsnet__List   *message);
size_t ara__cfsnet__list__pack
                     (const Ara__Cfsnet__List   *message,
                      uint8_t             *out);
size_t ara__cfsnet__list__pack_to_buffer
                     (const Ara__Cfsnet__List   *message,
                      ProtobufCBuffer     *buffer);
Ara__Cfsnet__List *
       ara__cfsnet__list__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ara__cfsnet__list__free_unpacked
                     (Ara__Cfsnet__List *message,
                      ProtobufCAllocator *allocator);
/* Ara__Cfsnet__ListDirectory methods */
void   ara__cfsnet__list_directory__init
                     (Ara__Cfsnet__ListDirectory         *message);
size_t ara__cfsnet__list_directory__get_packed_size
                     (const Ara__Cfsnet__ListDirectory   *message);
size_t ara__cfsnet__list_directory__pack
                     (const Ara__Cfsnet__ListDirectory   *message,
                      uint8_t             *out);
size_t ara__cfsnet__list_directory__pack_to_buffer
                     (const Ara__Cfsnet__ListDirectory   *message,
                      ProtobufCBuffer     *buffer);
Ara__Cfsnet__ListDirectory *
       ara__cfsnet__list_directory__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ara__cfsnet__list_directory__free_unpacked
                     (Ara__Cfsnet__ListDirectory *message,
                      ProtobufCAllocator *allocator);
/* Ara__Cfsnet__MakeDirectory methods */
void   ara__cfsnet__make_directory__init
                     (Ara__Cfsnet__MakeDirectory         *message);
size_t ara__cfsnet__make_directory__get_packed_size
                     (const Ara__Cfsnet__MakeDirectory   *message);
size_t ara__cfsnet__make_directory__pack
                     (const Ara__Cfsnet__MakeDirectory   *message,
                      uint8_t             *out);
size_t ara__cfsnet__make_directory__pack_to_buffer
                     (const Ara__Cfsnet__MakeDirectory   *message,
                      ProtobufCBuffer     *buffer);
Ara__Cfsnet__MakeDirectory *
       ara__cfsnet__make_directory__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ara__cfsnet__make_directory__free_unpacked
                     (Ara__Cfsnet__MakeDirectory *message,
                      ProtobufCAllocator *allocator);
/* Ara__Cfsnet__MakeDirectoryPath methods */
void   ara__cfsnet__make_directory_path__init
                     (Ara__Cfsnet__MakeDirectoryPath         *message);
size_t ara__cfsnet__make_directory_path__get_packed_size
                     (const Ara__Cfsnet__MakeDirectoryPath   *message);
size_t ara__cfsnet__make_directory_path__pack
                     (const Ara__Cfsnet__MakeDirectoryPath   *message,
                      uint8_t             *out);
size_t ara__cfsnet__make_directory_path__pack_to_buffer
                     (const Ara__Cfsnet__MakeDirectoryPath   *message,
                      ProtobufCBuffer     *buffer);
Ara__Cfsnet__MakeDirectoryPath *
       ara__cfsnet__make_directory_path__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ara__cfsnet__make_directory_path__free_unpacked
                     (Ara__Cfsnet__MakeDirectoryPath *message,
                      ProtobufCAllocator *allocator);
/* Ara__Cfsnet__Number methods */
void   ara__cfsnet__number__init
                     (Ara__Cfsnet__Number         *message);
size_t ara__cfsnet__number__get_packed_size
                     (const Ara__Cfsnet__Number   *message);
size_t ara__cfsnet__number__pack
                     (const Ara__Cfsnet__Number   *message,
                      uint8_t             *out);
size_t ara__cfsnet__number__pack_to_buffer
                     (const Ara__Cfsnet__Number   *message,
                      ProtobufCBuffer     *buffer);
Ara__Cfsnet__Number *
       ara__cfsnet__number__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ara__cfsnet__number__free_unpacked
                     (Ara__Cfsnet__Number *message,
                      ProtobufCAllocator *allocator);
/* Ara__Cfsnet__Open methods */
void   ara__cfsnet__open__init
                     (Ara__Cfsnet__Open         *message);
size_t ara__cfsnet__open__get_packed_size
                     (const Ara__Cfsnet__Open   *message);
size_t ara__cfsnet__open__pack
                     (const Ara__Cfsnet__Open   *message,
                      uint8_t             *out);
size_t ara__cfsnet__open__pack_to_buffer
                     (const Ara__Cfsnet__Open   *message,
                      ProtobufCBuffer     *buffer);
Ara__Cfsnet__Open *
       ara__cfsnet__open__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ara__cfsnet__open__free_unpacked
                     (Ara__Cfsnet__Open *message,
                      ProtobufCAllocator *allocator);
/* Ara__Cfsnet__Read methods */
void   ara__cfsnet__read__init
                     (Ara__Cfsnet__Read         *message);
size_t ara__cfsnet__read__get_packed_size
                     (const Ara__Cfsnet__Read   *message);
size_t ara__cfsnet__read__pack
                     (const Ara__Cfsnet__Read   *message,
                      uint8_t             *out);
size_t ara__cfsnet__read__pack_to_buffer
                     (const Ara__Cfsnet__Read   *message,
                      ProtobufCBuffer     *buffer);
Ara__Cfsnet__Read *
       ara__cfsnet__read__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ara__cfsnet__read__free_unpacked
                     (Ara__Cfsnet__Read *message,
                      ProtobufCAllocator *allocator);
/* Ara__Cfsnet__ReadFile methods */
void   ara__cfsnet__read_file__init
                     (Ara__Cfsnet__ReadFile         *message);
size_t ara__cfsnet__read_file__get_packed_size
                     (const Ara__Cfsnet__ReadFile   *message);
size_t ara__cfsnet__read_file__pack
                     (const Ara__Cfsnet__ReadFile   *message,
                      uint8_t             *out);
size_t ara__cfsnet__read_file__pack_to_buffer
                     (const Ara__Cfsnet__ReadFile   *message,
                      ProtobufCBuffer     *buffer);
Ara__Cfsnet__ReadFile *
       ara__cfsnet__read_file__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ara__cfsnet__read_file__free_unpacked
                     (Ara__Cfsnet__ReadFile *message,
                      ProtobufCAllocator *allocator);
/* Ara__Cfsnet__RemoveDirectory methods */
void   ara__cfsnet__remove_directory__init
                     (Ara__Cfsnet__RemoveDirectory         *message);
size_t ara__cfsnet__remove_directory__get_packed_size
                     (const Ara__Cfsnet__RemoveDirectory   *message);
size_t ara__cfsnet__remove_directory__pack
                     (const Ara__Cfsnet__RemoveDirectory   *message,
                      uint8_t             *out);
size_t ara__cfsnet__remove_directory__pack_to_buffer
                     (const Ara__Cfsnet__RemoveDirectory   *message,
                      ProtobufCBuffer     *buffer);
Ara__Cfsnet__RemoveDirectory *
       ara__cfsnet__remove_directory__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ara__cfsnet__remove_directory__free_unpacked
                     (Ara__Cfsnet__RemoveDirectory *message,
                      ProtobufCAllocator *allocator);
/* Ara__Cfsnet__RemoveDirectoryPath methods */
void   ara__cfsnet__remove_directory_path__init
                     (Ara__Cfsnet__RemoveDirectoryPath         *message);
size_t ara__cfsnet__remove_directory_path__get_packed_size
                     (const Ara__Cfsnet__RemoveDirectoryPath   *message);
size_t ara__cfsnet__remove_directory_path__pack
                     (const Ara__Cfsnet__RemoveDirectoryPath   *message,
                      uint8_t             *out);
size_t ara__cfsnet__remove_directory_path__pack_to_buffer
                     (const Ara__Cfsnet__RemoveDirectoryPath   *message,
                      ProtobufCBuffer     *buffer);
Ara__Cfsnet__RemoveDirectoryPath *
       ara__cfsnet__remove_directory_path__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ara__cfsnet__remove_directory_path__free_unpacked
                     (Ara__Cfsnet__RemoveDirectoryPath *message,
                      ProtobufCAllocator *allocator);
/* Ara__Cfsnet__Request methods */
void   ara__cfsnet__request__init
                     (Ara__Cfsnet__Request         *message);
size_t ara__cfsnet__request__get_packed_size
                     (const Ara__Cfsnet__Request   *message);
size_t ara__cfsnet__request__pack
                     (const Ara__Cfsnet__Request   *message,
                      uint8_t             *out);
size_t ara__cfsnet__request__pack_to_buffer
                     (const Ara__Cfsnet__Request   *message,
                      ProtobufCBuffer     *buffer);
Ara__Cfsnet__Request *
       ara__cfsnet__request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ara__cfsnet__request__free_unpacked
                     (Ara__Cfsnet__Request *message,
                      ProtobufCAllocator *allocator);
/* Ara__Cfsnet__Resolve methods */
void   ara__cfsnet__resolve__init
                     (Ara__Cfsnet__Resolve         *message);
size_t ara__cfsnet__resolve__get_packed_size
                     (const Ara__Cfsnet__Resolve   *message);
size_t ara__cfsnet__resolve__pack
                     (const Ara__Cfsnet__Resolve   *message,
                      uint8_t             *out);
size_t ara__cfsnet__resolve__pack_to_buffer
                     (const Ara__Cfsnet__Resolve   *message,
                      ProtobufCBuffer     *buffer);
Ara__Cfsnet__Resolve *
       ara__cfsnet__resolve__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ara__cfsnet__resolve__free_unpacked
                     (Ara__Cfsnet__Resolve *message,
                      ProtobufCAllocator *allocator);
/* Ara__Cfsnet__Response methods */
void   ara__cfsnet__response__init
                     (Ara__Cfsnet__Response         *message);
size_t ara__cfsnet__response__get_packed_size
                     (const Ara__Cfsnet__Response   *message);
size_t ara__cfsnet__response__pack
                     (const Ara__Cfsnet__Response   *message,
                      uint8_t             *out);
size_t ara__cfsnet__response__pack_to_buffer
                     (const Ara__Cfsnet__Response   *message,
                      ProtobufCBuffer     *buffer);
Ara__Cfsnet__Response *
       ara__cfsnet__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ara__cfsnet__response__free_unpacked
                     (Ara__Cfsnet__Response *message,
                      ProtobufCAllocator *allocator);
/* Ara__Cfsnet__Stat methods */
void   ara__cfsnet__stat__init
                     (Ara__Cfsnet__Stat         *message);
size_t ara__cfsnet__stat__get_packed_size
                     (const Ara__Cfsnet__Stat   *message);
size_t ara__cfsnet__stat__pack
                     (const Ara__Cfsnet__Stat   *message,
                      uint8_t             *out);
size_t ara__cfsnet__stat__pack_to_buffer
                     (const Ara__Cfsnet__Stat   *message,
                      ProtobufCBuffer     *buffer);
Ara__Cfsnet__Stat *
       ara__cfsnet__stat__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ara__cfsnet__stat__free_unpacked
                     (Ara__Cfsnet__Stat *message,
                      ProtobufCAllocator *allocator);
/* Ara__Cfsnet__StatFile methods */
void   ara__cfsnet__stat_file__init
                     (Ara__Cfsnet__StatFile         *message);
size_t ara__cfsnet__stat_file__get_packed_size
                     (const Ara__Cfsnet__StatFile   *message);
size_t ara__cfsnet__stat_file__pack
                     (const Ara__Cfsnet__StatFile   *message,
                      uint8_t             *out);
size_t ara__cfsnet__stat_file__pack_to_buffer
                     (const Ara__Cfsnet__StatFile   *message,
                      ProtobufCBuffer     *buffer);
Ara__Cfsnet__StatFile *
       ara__cfsnet__stat_file__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ara__cfsnet__stat_file__free_unpacked
                     (Ara__Cfsnet__StatFile *message,
                      ProtobufCAllocator *allocator);
/* Ara__Cfsnet__String methods */
void   ara__cfsnet__string__init
                     (Ara__Cfsnet__String         *message);
size_t ara__cfsnet__string__get_packed_size
                     (const Ara__Cfsnet__String   *message);
size_t ara__cfsnet__string__pack
                     (const Ara__Cfsnet__String   *message,
                      uint8_t             *out);
size_t ara__cfsnet__string__pack_to_buffer
                     (const Ara__Cfsnet__String   *message,
                      ProtobufCBuffer     *buffer);
Ara__Cfsnet__String *
       ara__cfsnet__string__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ara__cfsnet__string__free_unpacked
                     (Ara__Cfsnet__String *message,
                      ProtobufCAllocator *allocator);
/* Ara__Cfsnet__TouchFile methods */
void   ara__cfsnet__touch_file__init
                     (Ara__Cfsnet__TouchFile         *message);
size_t ara__cfsnet__touch_file__get_packed_size
                     (const Ara__Cfsnet__TouchFile   *message);
size_t ara__cfsnet__touch_file__pack
                     (const Ara__Cfsnet__TouchFile   *message,
                      uint8_t             *out);
size_t ara__cfsnet__touch_file__pack_to_buffer
                     (const Ara__Cfsnet__TouchFile   *message,
                      ProtobufCBuffer     *buffer);
Ara__Cfsnet__TouchFile *
       ara__cfsnet__touch_file__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ara__cfsnet__touch_file__free_unpacked
                     (Ara__Cfsnet__TouchFile *message,
                      ProtobufCAllocator *allocator);
/* Ara__Cfsnet__UnlinkFile methods */
void   ara__cfsnet__unlink_file__init
                     (Ara__Cfsnet__UnlinkFile         *message);
size_t ara__cfsnet__unlink_file__get_packed_size
                     (const Ara__Cfsnet__UnlinkFile   *message);
size_t ara__cfsnet__unlink_file__pack
                     (const Ara__Cfsnet__UnlinkFile   *message,
                      uint8_t             *out);
size_t ara__cfsnet__unlink_file__pack_to_buffer
                     (const Ara__Cfsnet__UnlinkFile   *message,
                      ProtobufCBuffer     *buffer);
Ara__Cfsnet__UnlinkFile *
       ara__cfsnet__unlink_file__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ara__cfsnet__unlink_file__free_unpacked
                     (Ara__Cfsnet__UnlinkFile *message,
                      ProtobufCAllocator *allocator);
/* Ara__Cfsnet__WriteFile methods */
void   ara__cfsnet__write_file__init
                     (Ara__Cfsnet__WriteFile         *message);
size_t ara__cfsnet__write_file__get_packed_size
                     (const Ara__Cfsnet__WriteFile   *message);
size_t ara__cfsnet__write_file__pack
                     (const Ara__Cfsnet__WriteFile   *message,
                      uint8_t             *out);
size_t ara__cfsnet__write_file__pack_to_buffer
                     (const Ara__Cfsnet__WriteFile   *message,
                      ProtobufCBuffer     *buffer);
Ara__Cfsnet__WriteFile *
       ara__cfsnet__write_file__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   ara__cfsnet__write_file__free_unpacked
                     (Ara__Cfsnet__WriteFile *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Ara__Cfsnet__AccessFile_Closure)
                 (const Ara__Cfsnet__AccessFile *message,
                  void *closure_data);
typedef void (*Ara__Cfsnet__Boolean_Closure)
                 (const Ara__Cfsnet__Boolean *message,
                  void *closure_data);
typedef void (*Ara__Cfsnet__Buffer_Closure)
                 (const Ara__Cfsnet__Buffer *message,
                  void *closure_data);
typedef void (*Ara__Cfsnet__Close_Closure)
                 (const Ara__Cfsnet__Close *message,
                  void *closure_data);
typedef void (*Ara__Cfsnet__DownloadDirectory_Closure)
                 (const Ara__Cfsnet__DownloadDirectory *message,
                  void *closure_data);
typedef void (*Ara__Cfsnet__DownloadFile_Closure)
                 (const Ara__Cfsnet__DownloadFile *message,
                  void *closure_data);
typedef void (*Ara__Cfsnet__Drive_Closure)
                 (const Ara__Cfsnet__Drive *message,
                  void *closure_data);
typedef void (*Ara__Cfsnet__Handshake_Closure)
                 (const Ara__Cfsnet__Handshake *message,
                  void *closure_data);
typedef void (*Ara__Cfsnet__KeyPair_Closure)
                 (const Ara__Cfsnet__KeyPair *message,
                  void *closure_data);
typedef void (*Ara__Cfsnet__List_Closure)
                 (const Ara__Cfsnet__List *message,
                  void *closure_data);
typedef void (*Ara__Cfsnet__ListDirectory_Closure)
                 (const Ara__Cfsnet__ListDirectory *message,
                  void *closure_data);
typedef void (*Ara__Cfsnet__MakeDirectory_Closure)
                 (const Ara__Cfsnet__MakeDirectory *message,
                  void *closure_data);
typedef void (*Ara__Cfsnet__MakeDirectoryPath_Closure)
                 (const Ara__Cfsnet__MakeDirectoryPath *message,
                  void *closure_data);
typedef void (*Ara__Cfsnet__Number_Closure)
                 (const Ara__Cfsnet__Number *message,
                  void *closure_data);
typedef void (*Ara__Cfsnet__Open_Closure)
                 (const Ara__Cfsnet__Open *message,
                  void *closure_data);
typedef void (*Ara__Cfsnet__Read_Closure)
                 (const Ara__Cfsnet__Read *message,
                  void *closure_data);
typedef void (*Ara__Cfsnet__ReadFile_Closure)
                 (const Ara__Cfsnet__ReadFile *message,
                  void *closure_data);
typedef void (*Ara__Cfsnet__RemoveDirectory_Closure)
                 (const Ara__Cfsnet__RemoveDirectory *message,
                  void *closure_data);
typedef void (*Ara__Cfsnet__RemoveDirectoryPath_Closure)
                 (const Ara__Cfsnet__RemoveDirectoryPath *message,
                  void *closure_data);
typedef void (*Ara__Cfsnet__Request_Closure)
                 (const Ara__Cfsnet__Request *message,
                  void *closure_data);
typedef void (*Ara__Cfsnet__Resolve_Closure)
                 (const Ara__Cfsnet__Resolve *message,
                  void *closure_data);
typedef void (*Ara__Cfsnet__Response_Closure)
                 (const Ara__Cfsnet__Response *message,
                  void *closure_data);
typedef void (*Ara__Cfsnet__Stat_Closure)
                 (const Ara__Cfsnet__Stat *message,
                  void *closure_data);
typedef void (*Ara__Cfsnet__StatFile_Closure)
                 (const Ara__Cfsnet__StatFile *message,
                  void *closure_data);
typedef void (*Ara__Cfsnet__String_Closure)
                 (const Ara__Cfsnet__String *message,
                  void *closure_data);
typedef void (*Ara__Cfsnet__TouchFile_Closure)
                 (const Ara__Cfsnet__TouchFile *message,
                  void *closure_data);
typedef void (*Ara__Cfsnet__UnlinkFile_Closure)
                 (const Ara__Cfsnet__UnlinkFile *message,
                  void *closure_data);
typedef void (*Ara__Cfsnet__WriteFile_Closure)
                 (const Ara__Cfsnet__WriteFile *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    ara__cfsnet__file_mode__descriptor;
extern const ProtobufCEnumDescriptor    ara__cfsnet__error_code__descriptor;
extern const ProtobufCEnumDescriptor    ara__cfsnet__operation__descriptor;
extern const ProtobufCMessageDescriptor ara__cfsnet__access_file__descriptor;
extern const ProtobufCMessageDescriptor ara__cfsnet__boolean__descriptor;
extern const ProtobufCMessageDescriptor ara__cfsnet__buffer__descriptor;
extern const ProtobufCMessageDescriptor ara__cfsnet__close__descriptor;
extern const ProtobufCMessageDescriptor ara__cfsnet__download_directory__descriptor;
extern const ProtobufCMessageDescriptor ara__cfsnet__download_file__descriptor;
extern const ProtobufCMessageDescriptor ara__cfsnet__drive__descriptor;
extern const ProtobufCMessageDescriptor ara__cfsnet__handshake__descriptor;
extern const ProtobufCMessageDescriptor ara__cfsnet__key_pair__descriptor;
extern const ProtobufCMessageDescriptor ara__cfsnet__list__descriptor;
extern const ProtobufCMessageDescriptor ara__cfsnet__list_directory__descriptor;
extern const ProtobufCMessageDescriptor ara__cfsnet__make_directory__descriptor;
extern const ProtobufCMessageDescriptor ara__cfsnet__make_directory_path__descriptor;
extern const ProtobufCMessageDescriptor ara__cfsnet__number__descriptor;
extern const ProtobufCMessageDescriptor ara__cfsnet__open__descriptor;
extern const ProtobufCMessageDescriptor ara__cfsnet__read__descriptor;
extern const ProtobufCMessageDescriptor ara__cfsnet__read_file__descriptor;
extern const ProtobufCMessageDescriptor ara__cfsnet__remove_directory__descriptor;
extern const ProtobufCMessageDescriptor ara__cfsnet__remove_directory_path__descriptor;
extern const ProtobufCMessageDescriptor ara__cfsnet__request__descriptor;
extern const ProtobufCMessageDescriptor ara__cfsnet__resolve__descriptor;
extern const ProtobufCMessageDescriptor ara__cfsnet__response__descriptor;
extern const ProtobufCMessageDescriptor ara__cfsnet__stat__descriptor;
extern const ProtobufCMessageDescriptor ara__cfsnet__stat_file__descriptor;
extern const ProtobufCMessageDescriptor ara__cfsnet__string__descriptor;
extern const ProtobufCMessageDescriptor ara__cfsnet__touch_file__descriptor;
extern const ProtobufCMessageDescriptor ara__cfsnet__unlink_file__descriptor;
extern const ProtobufCMessageDescriptor ara__cfsnet__write_file__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_cfsnet_2eproto__INCLUDED */
