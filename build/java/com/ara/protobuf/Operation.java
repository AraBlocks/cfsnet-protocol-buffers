// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cfsnet.proto

package com.ara.protobuf;

/**
 * Protobuf enum {@code ara.cfsnet.Operation}
 */
public enum Operation
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>NoOperation = 0;</code>
   */
  NoOperation(0),
  /**
   * <code>ResolveOperation = 1;</code>
   */
  ResolveOperation(1),
  /**
   * <code>KeyPairOperation = 2;</code>
   */
  KeyPairOperation(2),
  /**
   * <code>OpenOperation = 10;</code>
   */
  OpenOperation(10),
  /**
   * <code>CloseOperation = 11;</code>
   */
  CloseOperation(11),
  /**
   * <code>ReadOperation = 12;</code>
   */
  ReadOperation(12),
  /**
   * <code>WriteOperation = 13;</code>
   */
  WriteOperation(13),
  /**
   * <code>ReadFileOperation = 20;</code>
   */
  ReadFileOperation(20),
  /**
   * <code>WriteFileOperation = 21;</code>
   */
  WriteFileOperation(21),
  /**
   * <code>StatFileOperation = 22;</code>
   */
  StatFileOperation(22),
  /**
   * <code>UnlinkFileOperation = 23;</code>
   */
  UnlinkFileOperation(23),
  /**
   * <code>AccessFileOperation = 24;</code>
   */
  AccessFileOperation(24),
  /**
   * <code>TouchFileOperation = 25;</code>
   */
  TouchFileOperation(25),
  /**
   * <code>DownloadFileOperation = 26;</code>
   */
  DownloadFileOperation(26),
  /**
   * <code>DownloadDirectoryOperation = 30;</code>
   */
  DownloadDirectoryOperation(30),
  /**
   * <code>MakeDirectoryOperation = 31;</code>
   */
  MakeDirectoryOperation(31),
  /**
   * <code>MakeDirectoryPathOperation = 32;</code>
   */
  MakeDirectoryPathOperation(32),
  /**
   * <code>RemoveDirectoryOperation = 33;</code>
   */
  RemoveDirectoryOperation(33),
  /**
   * <code>RemoveDirectoryPathOperation = 34;</code>
   */
  RemoveDirectoryPathOperation(34),
  /**
   * <code>ListDirectoryOperation = 35;</code>
   */
  ListDirectoryOperation(35),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>NoOperation = 0;</code>
   */
  public static final int NoOperation_VALUE = 0;
  /**
   * <code>ResolveOperation = 1;</code>
   */
  public static final int ResolveOperation_VALUE = 1;
  /**
   * <code>KeyPairOperation = 2;</code>
   */
  public static final int KeyPairOperation_VALUE = 2;
  /**
   * <code>OpenOperation = 10;</code>
   */
  public static final int OpenOperation_VALUE = 10;
  /**
   * <code>CloseOperation = 11;</code>
   */
  public static final int CloseOperation_VALUE = 11;
  /**
   * <code>ReadOperation = 12;</code>
   */
  public static final int ReadOperation_VALUE = 12;
  /**
   * <code>WriteOperation = 13;</code>
   */
  public static final int WriteOperation_VALUE = 13;
  /**
   * <code>ReadFileOperation = 20;</code>
   */
  public static final int ReadFileOperation_VALUE = 20;
  /**
   * <code>WriteFileOperation = 21;</code>
   */
  public static final int WriteFileOperation_VALUE = 21;
  /**
   * <code>StatFileOperation = 22;</code>
   */
  public static final int StatFileOperation_VALUE = 22;
  /**
   * <code>UnlinkFileOperation = 23;</code>
   */
  public static final int UnlinkFileOperation_VALUE = 23;
  /**
   * <code>AccessFileOperation = 24;</code>
   */
  public static final int AccessFileOperation_VALUE = 24;
  /**
   * <code>TouchFileOperation = 25;</code>
   */
  public static final int TouchFileOperation_VALUE = 25;
  /**
   * <code>DownloadFileOperation = 26;</code>
   */
  public static final int DownloadFileOperation_VALUE = 26;
  /**
   * <code>DownloadDirectoryOperation = 30;</code>
   */
  public static final int DownloadDirectoryOperation_VALUE = 30;
  /**
   * <code>MakeDirectoryOperation = 31;</code>
   */
  public static final int MakeDirectoryOperation_VALUE = 31;
  /**
   * <code>MakeDirectoryPathOperation = 32;</code>
   */
  public static final int MakeDirectoryPathOperation_VALUE = 32;
  /**
   * <code>RemoveDirectoryOperation = 33;</code>
   */
  public static final int RemoveDirectoryOperation_VALUE = 33;
  /**
   * <code>RemoveDirectoryPathOperation = 34;</code>
   */
  public static final int RemoveDirectoryPathOperation_VALUE = 34;
  /**
   * <code>ListDirectoryOperation = 35;</code>
   */
  public static final int ListDirectoryOperation_VALUE = 35;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static Operation valueOf(int value) {
    return forNumber(value);
  }

  public static Operation forNumber(int value) {
    switch (value) {
      case 0: return NoOperation;
      case 1: return ResolveOperation;
      case 2: return KeyPairOperation;
      case 10: return OpenOperation;
      case 11: return CloseOperation;
      case 12: return ReadOperation;
      case 13: return WriteOperation;
      case 20: return ReadFileOperation;
      case 21: return WriteFileOperation;
      case 22: return StatFileOperation;
      case 23: return UnlinkFileOperation;
      case 24: return AccessFileOperation;
      case 25: return TouchFileOperation;
      case 26: return DownloadFileOperation;
      case 30: return DownloadDirectoryOperation;
      case 31: return MakeDirectoryOperation;
      case 32: return MakeDirectoryPathOperation;
      case 33: return RemoveDirectoryOperation;
      case 34: return RemoveDirectoryPathOperation;
      case 35: return ListDirectoryOperation;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<Operation>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      Operation> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<Operation>() {
          public Operation findValueByNumber(int number) {
            return Operation.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.ara.protobuf.CFSNetProtobuf.getDescriptor().getEnumTypes().get(2);
  }

  private static final Operation[] VALUES = values();

  public static Operation valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private Operation(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:ara.cfsnet.Operation)
}

