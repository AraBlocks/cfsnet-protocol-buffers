// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cfsnet.proto

package com.littlstar.protobuf;

/**
 * Protobuf enum {@code littlstar.cfsnet.ErrorCode}
 */
public enum ErrorCode
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>NoError = 0;</code>
   */
  NoError(0),
  /**
   * <code>BadRequestError = 400;</code>
   */
  BadRequestError(400),
  /**
   * <code>AccessDeniedError = 403;</code>
   */
  AccessDeniedError(403),
  /**
   * <code>NotFoundError = 404;</code>
   */
  NotFoundError(404),
  /**
   * <code>NotSupportedError = 405;</code>
   */
  NotSupportedError(405),
  /**
   * <code>NotOpenedError = 410;</code>
   */
  NotOpenedError(410),
  /**
   * <code>InternalError = 500;</code>
   */
  InternalError(500),
  /**
   * <code>NotImplementedError = 501;</code>
   */
  NotImplementedError(501),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>NoError = 0;</code>
   */
  public static final int NoError_VALUE = 0;
  /**
   * <code>BadRequestError = 400;</code>
   */
  public static final int BadRequestError_VALUE = 400;
  /**
   * <code>AccessDeniedError = 403;</code>
   */
  public static final int AccessDeniedError_VALUE = 403;
  /**
   * <code>NotFoundError = 404;</code>
   */
  public static final int NotFoundError_VALUE = 404;
  /**
   * <code>NotSupportedError = 405;</code>
   */
  public static final int NotSupportedError_VALUE = 405;
  /**
   * <code>NotOpenedError = 410;</code>
   */
  public static final int NotOpenedError_VALUE = 410;
  /**
   * <code>InternalError = 500;</code>
   */
  public static final int InternalError_VALUE = 500;
  /**
   * <code>NotImplementedError = 501;</code>
   */
  public static final int NotImplementedError_VALUE = 501;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static ErrorCode valueOf(int value) {
    return forNumber(value);
  }

  public static ErrorCode forNumber(int value) {
    switch (value) {
      case 0: return NoError;
      case 400: return BadRequestError;
      case 403: return AccessDeniedError;
      case 404: return NotFoundError;
      case 405: return NotSupportedError;
      case 410: return NotOpenedError;
      case 500: return InternalError;
      case 501: return NotImplementedError;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<ErrorCode>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      ErrorCode> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<ErrorCode>() {
          public ErrorCode findValueByNumber(int number) {
            return ErrorCode.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.littlstar.protobuf.CFSNetProtobuf.getDescriptor().getEnumTypes().get(1);
  }

  private static final ErrorCode[] VALUES = values();

  public static ErrorCode valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private ErrorCode(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:littlstar.cfsnet.ErrorCode)
}

