// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cfsnet.proto

package com.littlstar.protobuf;

/**
 * Protobuf enum {@code littlstar.cfsnet.Operation}
 */
public enum Operation
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>NoOperation = 0;</code>
   */
  NoOperation(0),
  /**
   * <code>ResolveOperation = 1;</code>
   */
  ResolveOperation(1),
  /**
   * <code>OpenOperation = 2;</code>
   */
  OpenOperation(2),
  /**
   * <code>CloseOperation = 3;</code>
   */
  CloseOperation(3),
  /**
   * <code>ReadOperation = 4;</code>
   */
  ReadOperation(4),
  /**
   * <code>WriteOperation = 5;</code>
   */
  WriteOperation(5),
  /**
   * <code>ReadFileOperation = 10;</code>
   */
  ReadFileOperation(10),
  /**
   * <code>WriteFileOperation = 11;</code>
   */
  WriteFileOperation(11),
  /**
   * <code>StatFileOperation = 12;</code>
   */
  StatFileOperation(12),
  /**
   * <code>UnlinkFileOperation = 13;</code>
   */
  UnlinkFileOperation(13),
  /**
   * <code>AccessFileOperation = 14;</code>
   */
  AccessFileOperation(14),
  /**
   * <code>TouchFileOperation = 15;</code>
   */
  TouchFileOperation(15),
  /**
   * <code>DownloadFileOperation = 16;</code>
   */
  DownloadFileOperation(16),
  /**
   * <code>DownloadDirectoryOperation = 20;</code>
   */
  DownloadDirectoryOperation(20),
  /**
   * <code>MakeDirectoryOperation = 21;</code>
   */
  MakeDirectoryOperation(21),
  /**
   * <code>MakeDirectoryPathOperation = 22;</code>
   */
  MakeDirectoryPathOperation(22),
  /**
   * <code>RemoveDirectoryOperation = 23;</code>
   */
  RemoveDirectoryOperation(23),
  /**
   * <code>RemoveDirectoryPathOperation = 24;</code>
   */
  RemoveDirectoryPathOperation(24),
  /**
   * <code>ListDirectoryOperation = 25;</code>
   */
  ListDirectoryOperation(25),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>NoOperation = 0;</code>
   */
  public static final int NoOperation_VALUE = 0;
  /**
   * <code>ResolveOperation = 1;</code>
   */
  public static final int ResolveOperation_VALUE = 1;
  /**
   * <code>OpenOperation = 2;</code>
   */
  public static final int OpenOperation_VALUE = 2;
  /**
   * <code>CloseOperation = 3;</code>
   */
  public static final int CloseOperation_VALUE = 3;
  /**
   * <code>ReadOperation = 4;</code>
   */
  public static final int ReadOperation_VALUE = 4;
  /**
   * <code>WriteOperation = 5;</code>
   */
  public static final int WriteOperation_VALUE = 5;
  /**
   * <code>ReadFileOperation = 10;</code>
   */
  public static final int ReadFileOperation_VALUE = 10;
  /**
   * <code>WriteFileOperation = 11;</code>
   */
  public static final int WriteFileOperation_VALUE = 11;
  /**
   * <code>StatFileOperation = 12;</code>
   */
  public static final int StatFileOperation_VALUE = 12;
  /**
   * <code>UnlinkFileOperation = 13;</code>
   */
  public static final int UnlinkFileOperation_VALUE = 13;
  /**
   * <code>AccessFileOperation = 14;</code>
   */
  public static final int AccessFileOperation_VALUE = 14;
  /**
   * <code>TouchFileOperation = 15;</code>
   */
  public static final int TouchFileOperation_VALUE = 15;
  /**
   * <code>DownloadFileOperation = 16;</code>
   */
  public static final int DownloadFileOperation_VALUE = 16;
  /**
   * <code>DownloadDirectoryOperation = 20;</code>
   */
  public static final int DownloadDirectoryOperation_VALUE = 20;
  /**
   * <code>MakeDirectoryOperation = 21;</code>
   */
  public static final int MakeDirectoryOperation_VALUE = 21;
  /**
   * <code>MakeDirectoryPathOperation = 22;</code>
   */
  public static final int MakeDirectoryPathOperation_VALUE = 22;
  /**
   * <code>RemoveDirectoryOperation = 23;</code>
   */
  public static final int RemoveDirectoryOperation_VALUE = 23;
  /**
   * <code>RemoveDirectoryPathOperation = 24;</code>
   */
  public static final int RemoveDirectoryPathOperation_VALUE = 24;
  /**
   * <code>ListDirectoryOperation = 25;</code>
   */
  public static final int ListDirectoryOperation_VALUE = 25;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static Operation valueOf(int value) {
    return forNumber(value);
  }

  public static Operation forNumber(int value) {
    switch (value) {
      case 0: return NoOperation;
      case 1: return ResolveOperation;
      case 2: return OpenOperation;
      case 3: return CloseOperation;
      case 4: return ReadOperation;
      case 5: return WriteOperation;
      case 10: return ReadFileOperation;
      case 11: return WriteFileOperation;
      case 12: return StatFileOperation;
      case 13: return UnlinkFileOperation;
      case 14: return AccessFileOperation;
      case 15: return TouchFileOperation;
      case 16: return DownloadFileOperation;
      case 20: return DownloadDirectoryOperation;
      case 21: return MakeDirectoryOperation;
      case 22: return MakeDirectoryPathOperation;
      case 23: return RemoveDirectoryOperation;
      case 24: return RemoveDirectoryPathOperation;
      case 25: return ListDirectoryOperation;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<Operation>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      Operation> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<Operation>() {
          public Operation findValueByNumber(int number) {
            return Operation.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.littlstar.protobuf.CFSNetProtobuf.getDescriptor().getEnumTypes().get(2);
  }

  private static final Operation[] VALUES = values();

  public static Operation valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private Operation(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:littlstar.cfsnet.Operation)
}

